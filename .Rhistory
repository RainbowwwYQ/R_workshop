new_author$Title2<- str_replace_all(new_author$Title2, "7", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "8", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "9", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "0", " ")
new_author$Title2 <- str_replace_all(new_author$Title2, " ", "")
View(new_author)
new_author <- new_author[order(new_author$Title2),]
row.names(new_author) <- NULL
new3 <- new2
View(new3)
new3 <- new3[,-(5:10)]
new3 <- new2
new3 <- new3[,-(5:12)]
View(new2)
new2 <- new2[,-2]
new2 <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document_type_update.csv", header = T, as.is = T, encoding = "UTF=8")
table(new2$Title.x==new2$Title.y)
length(unique(new2$Title.x))
length(unique(new2$Title.y))
new2$check_update <- NA
obs <- length(new2$NAMIS_Appl_ID)
for (i in 1:obs){
if (new2[i,"Title.x"] == new2[i,"Title.y"]){
new2[i,"check_update"] <- "N"
} else {
new2[i,"check_update"] <- "Y"
}
}
new2 <- new2[,-3]
new_author <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors.csv", header = T, as.is = T, encoding = "UTF=8")
new_author$Title2 <- str_replace_all(new_author$Title, "[^[:alnum:]]", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "1", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "2", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "3", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "4", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "5", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "6", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "7", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "8", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "9", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "0", " ")
new_author$Title2 <- str_replace_all(new_author$Title2, " ", "")
# new_author <- new_author[complete.cases(new_author$NAMIS_Appl_ID),]
new_author <- new_author[order(new_author$Title2),]
row.names(new_author) <- NULL
new3 <- new2
new3 <- new3[,-(4:11)]
new_author2 <- left_join(new_author,new3, by="Title2")
View(new_author2)
length(unique(new_author2$NAMIS_Appl_ID.x))
length(unique(new_author2$NAMIS_Appl_ID.y))
length(unique(new_author2$Title.y))
length(unique(new_author2$Title))
View(new_author)
View(new2)
View(new2)
View(new)
View(new3)
length(unique(new_author2$NAMIS_Appl_ID.x))
length(unique(new_author2$NAMIS_Appl_ID.y))
new_author2$NAMIS_Appl_ID.x == new_author2$NAMIS_Appl_ID.y
View(new_author2)
write.csv(new_author2, file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors(via).csv")
write.csv(new2, file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_updated.csv")
library(stringr)
library(dplyr)
rm(list = ls())
new <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_updated.csv", header = T, as.is = T, encoding = "UTF=8")
rm(list = ls())
new <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_updated.csv", header = T, as.is = T, encoding = "UTF=8")
old <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_info.csv", header = T, as.is = T, encoding = "UTF=8")
new2 <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors_updated.csv", header = T, as.is = T, encoding = "UTF=8")
View(new)
length(unique(new$NAMIS_Appl_ID))
length(unique(new2$NAMIS_Appl_ID))
length(unique(old$NAMIS_Appl_ID))
length(unique(new$Title))
length(unique(new2$Title))
length(unique(old$Title))
old <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_info_updated.csv", header = T, as.is = T, encoding = "UTF=8")
View(new)
View(old)
library(stringr)
library(dplyr)
rm(list = ls())
new <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document_type.csv", header = T, as.is = T, encoding = "UTF=8")
old <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_info_updated.csv", header = T, as.is = T, encoding = "UTF=8")
# fix duplicates and lack of applicant ids
old$check_dup <- "Pending"
obs0 <- length(old$NAMIS_Appl_ID)
old <- old[order(old$NAMIS_Appl_ID, old$NAMIS_Competition_Year,
old$Title),]
row.names(old) <- NULL
for (i in 2:obs0){
if (old[i,"NAMIS_Appl_ID"]==old[i-1,"NAMIS_Appl_ID"]
& old[i,"NAMIS_Competition_Year"]==old[i-1,"NAMIS_Competition_Year"]
& old[i,"Title"]==old[i-1,"Title"]){
old[i-1, "check_dup"]<-NA
}
}
old <- old[complete.cases(old$check_dup),]
length(unique(old$NAMIS_Appl_ID))
length(unique(new$NAMIS_Appl_ID))
length(unique(old$Title))
length(unique(new$Title))
new$Title2 <- str_replace_all(new$Title, "[^[:alnum:]]", " ")
new$Title2<- str_replace_all(new$Title2, "1", " ")
new$Title2<- str_replace_all(new$Title2, "2", " ")
new$Title2<- str_replace_all(new$Title2, "3", " ")
new$Title2<- str_replace_all(new$Title2, "4", " ")
new$Title2<- str_replace_all(new$Title2, "5", " ")
new$Title2<- str_replace_all(new$Title2, "6", " ")
new$Title2<- str_replace_all(new$Title2, "7", " ")
new$Title2<- str_replace_all(new$Title2, "8", " ")
new$Title2<- str_replace_all(new$Title2, "9", " ")
new$Title2<- str_replace_all(new$Title2, "0", " ")
new$Title2 <- str_replace_all(new$Title2, " ", "")
new <- new[order(new$Title2),]
row.names(new) <- NULL
old$Title2 <- str_replace_all(old$Title, "[^[:alnum:]]", " ")
old$Title2<- str_replace_all(old$Title2, "1", " ")
old$Title2<- str_replace_all(old$Title2, "2", " ")
old$Title2<- str_replace_all(old$Title2, "3", " ")
old$Title2<- str_replace_all(old$Title2, "4", " ")
old$Title2<- str_replace_all(old$Title2, "5", " ")
old$Title2<- str_replace_all(old$Title2, "6", " ")
old$Title2<- str_replace_all(old$Title2, "7", " ")
old$Title2<- str_replace_all(old$Title2, "8", " ")
old$Title2<- str_replace_all(old$Title2, "9", " ")
old$Title2<- str_replace_all(old$Title2, "0", " ")
old$Title2 <- str_replace_all(old$Title2, " ", "")
old <- old[order(old$Title2),]
row.names(old) <- NULL
new_add_id <- left_join(new, old, by="Title2")
new_add_id2 <- left_join(old, new, by="Title2")
write.csv(new_add_id, file = "/Users/mayhe/Desktop/check co-authors/part2./part.2_update.csv")
write.csv(new_add_id, file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document_type_update.csv")
length(unique(new_add_id$Title.x))
length(unique(new_add_id$NAMIS_Appl_ID.x))
length(unique(new_add_id$NAMIS_Appl_ID.y))
new2 <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document_type_update.csv", header = T, as.is = T, encoding = "UTF=8")
table(new2$Title.x==new2$Title.y)
length(unique(new2$Title.x))
length(unique(new2$Title.y))
new2$check_update <- NA
View(new2)
obs <- length(new2$NAMIS_Appl_ID)
for (i in 1:obs){
if (new2[i,"Title.x"] == new2[i,"Title.y"]){
new2[i,"check_update"] <- "N"
} else {
new2[i,"check_update"] <- "Y"
}
}
new2 <- new2[,-3]
write.csv(new2, file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_update2.csv")
new_author <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors.csv", header = T, as.is = T, encoding = "UTF=8")
new_author$Title2 <- str_replace_all(new_author$Title, "[^[:alnum:]]", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "1", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "2", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "3", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "4", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "5", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "6", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "7", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "8", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "9", " ")
new_author$Title2<- str_replace_all(new_author$Title2, "0", " ")
new_author$Title2 <- str_replace_all(new_author$Title2, " ", "")
# new_author <- new_author[complete.cases(new_author$NAMIS_Appl_ID),]
new_author <- new_author[order(new_author$Title2),]
row.names(new_author) <- NULL
new3 <- new2
new3 <- new3[,-(4:11)]
new_author2 <- left_join(new_author,new3, by="Title2")
#length(unique(new_author2$Title.y))
#length(unique(new_author2$Title.x))
#table(new_author2$Title.x == new_author2$Title.y)
#length(unique(new2$Title2))
#length(unique(new2$Title))
# new3 <- left_join(new3,new3, by="Title2")
length(unique(new_author2$NAMIS_Appl_ID.x))
length(unique(new_author2$NAMIS_Appl_ID.y))
length(unique(new_author2$NAMIS_Appl_ID.x))
length(unique(new_author2$NAMIS_Appl_ID))
length(unique(new_author2$NAMIS_Appl_ID.y))
write.csv(new_author2, file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors(via).csv")
library(stringr)
library(dplyr)
rm(list = ls())
new <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_update2.csv", header = T, as.is = T, encoding = "UTF=8")
old <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_info_updated.csv", header = T, as.is = T, encoding = "UTF=8")
new2 <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors_update.csv", header = T, as.is = T, encoding = "UTF=8")
length(unique(new$NAMIS_Appl_ID))
length(unique(new2$NAMIS_Appl_ID))
length(unique(old$NAMIS_Appl_ID))
length(unique(new$Title))
length(unique(new2$Title))
length(unique(old$Title))
View(new2)
rm(list = ls())
new <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_update2.csv", header = T, as.is = T, encoding = "UTF=8")
old <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2_info_updated.csv", header = T, as.is = T, encoding = "UTF=8")
new2 <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors_update.csv", header = T, as.is = T, encoding = "UTF=8")
View(new)
View(old)
length(unique(new$NAMIS_Appl_ID))
length(unique(new2$NAMIS_Appl_ID))
length(unique(old$NAMIS_Appl_ID))
length(unique(new$Title))
length(unique(new2$Title))
length(unique(old$Title))
obs3 <- length(new$NAMIS_Appl_ID)
View(new)
new <- new[order(new$NAMIS_Appl_ID, new$NAMIS_Competition_Year,
new$Title),]
row.names(new) <- NULL
new$check_dup <- "Pending"
for (i in 2:obs3){
if (new[i,"NAMIS_Appl_ID"]==new[i-1,"NAMIS_Appl_ID"]
& new[i,"NAMIS_Competition_Year"]==new[i-1,"NAMIS_Competition_Year"]
& new[i,"Title"]==new[i-1,"Title"]){
new[i-1, "check_dup"]<-NA
}
}
new <- new[complete.cases(new$check_dup),]
length(unique(new$NAMIS_Appl_ID))
length(unique(new2$NAMIS_Appl_ID))
length(unique(old$NAMIS_Appl_ID))
length(unique(new$Title))
length(unique(new2$Title))
length(unique(old$Title))
write.csv(new, file = "/Users/mayhe/Desktop/check co-authors/part2./part2_document type_update3.csv")
obs4 <- length(new2$NAMIS_Appl_ID)
new2 <- new2[order(new2$NAMIS_Appl_ID, new2$NAMIS_Competition_Year,
new2$Title),]
row.names(new2) <- NULL
new2$check_dup <- "Pending"
new2 <- new2[order(new2$NAMIS_Appl_ID, new2$NAMIS_Competition_Year,
new2$Title,new2$Coauthors_LastName,new2$Coauthors_FirstName,
new2$Coauthors_Initials),]
row.names(new2) <- NULL
new2$check_dup <- "Pending"
for (i in 2:obs4){
if (new2[i,"NAMIS_Appl_ID"]==new2[i-1,"NAMIS_Appl_ID"]
& new2[i,"NAMIS_Competition_Year"]==new2[i-1,"NAMIS_Competition_Year"]
& new2[i,"Title"]==new2[i-1,"Title"]
$ new2[i,"Coauthors_LastName"]==new2[i-1,"Coauthors_LastName"]){
new2[i-1, "check_dup"]<-NA
}
}
for (i in 2:obs4){
if (new2[i,"NAMIS_Appl_ID"]==new2[i-1,"NAMIS_Appl_ID"]
& new2[i,"NAMIS_Competition_Year"]==new2[i-1,"NAMIS_Competition_Year"]
& new2[i,"Title"]==new2[i-1,"Title"]
$ new2[i,"Coauthors_LastName"]==new2[i-1,"Coauthors_LastName"]){
new2[i-1, "check_dup"]<-NA
}
}
new2$check_dup <- "Pending"
for (i in 2:obs4){
if (new2[i,"NAMIS_Appl_ID"]==new2[i-1,"NAMIS_Appl_ID"]
& new2[i,"NAMIS_Competition_Year"]==new2[i-1,"NAMIS_Competition_Year"]
& new2[i,"Title"]==new2[i-1,"Title"]
$ new2[i,"Coauthors_LastName"]==new2[i-1,"Coauthors_LastName"]){
new2[i-1, "check_dup"]<-NA
}
}
new2 <- read.csv(file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors_update.csv", header = T, as.is = T, encoding = "UTF=8")
View(new2)
obs4 <- length(new2$NAMIS_Appl_ID)
new2 <- new2[order(new2$NAMIS_Appl_ID, new2$NAMIS_Competition_Year,
new2$Title, new2$Coauthors_LastName, new2$Coauthors_FirstName,
new2$Coauthors_Initials),]
row.names(new2) <- NULL
new2 <- new2[order(new2$NAMIS_Appl_ID, new2$NAMIS_Competition_Year,
new2$Title, new2$Coauthors_LastName, new2$Coauthors_FirstName,
new2$Coauthors_Initials),]
row.names(new2) <- NULL
View(new2)
new2$check_dup <- "Pending"
for (i in 2:obs4){
if (new2[i,"NAMIS_Appl_ID"]==new2[i-1,"NAMIS_Appl_ID"]
& new2[i,"NAMIS_Competition_Year"]==new2[i-1,"NAMIS_Competition_Year"]
& new2[i,"Title"]==new2[i-1,"Title"]
& new2[i,"Coauthors_LastName"]==new2[i-1,"Coauthors_LastName"]){
new2[i-1, "check_dup"]<-NA
}
}
new2 <- new2[complete.cases(new2$check_dup),]
write.csv(new2, file = "/Users/mayhe/Desktop/check co-authors/part2./part2 co-authors_update2.csv")
View(new2)
length(unique(new$NAMIS_Appl_ID))
length(unique(new2$NAMIS_Appl_ID))
length(unique(old$NAMIS_Appl_ID))
length(unique(new$Title))
length(unique(new2$Title))
length(unique(old$Title))
library(stringr)
library(dplyr)
rm(list = ls())
part2 <- read.csv(file = "/Users/mayhe/Dropbox/NSERC Reseach Project 2019/Data/publications/part.2/pub_part2_0906/part2_funding.csv", header = T, as.is = T, encoding = "UTF=8")
part1 <- read.csv(file = "/Users/mayhe/Dropbox/NSERC Reseach Project 2019/Data/publications/part.1/pub_part1_0906/part1_funding.csv", header = T, as.is = T, encoding = "UTF=8")
part1$check_unique <- paste(part1$NAMIS_Appl_ID, part1$NAMIS_Competition_Year, "-")
View(part1)
part1$check_unique <- paste(part1$NAMIS_Appl_ID, "-", part1$NAMIS_Competition_Year)
length(unique(part1$check_unique))
part1_CRD <- part1[which(Program_Id == "CRDPJ")]
part1_CRD <- part1[which(part1$Program_Id == "CRDPJ")]
part1_CRD <- part1[which(Program_Id == "CRDPJ")]
part1[part1[,"Program_Id"]=="CRDPJ",]
part1_CRD <- part1[part1[,"Program_Id"]=="CRDPJ",]
View(part1_CRD)
length(unique(part1_CRD$check_unique))
part2$check_unique <- paste(part2$NAMIS_Appl_ID, "-", part2$NAMIS_Competition_Year)
part2_CRD <- part2[part2[,"Program_Id"]=="CRDPJ",]
length(unique(part2_CRD$check_unique))
full <- read.csv(file = "/Users/mayhe/Downloads/CRD_projects.csv", header = T, as.is = T, encoding = "UTF=8")
View(full)
length(unique(full$Appl_ID.CompYear))
full_NSERC <- read.csv(file = "/Users/mayhe/Desktop/all CRD from NSERC.csv", header = T, as.is = T, encoding = "UTF=8")
View(full_NSERC)
length(unique(full_NSERC$Appl_ID.CompYear))
part1$check_unique <- paste(part1$NAMIS_Appl_ID, "-", part1$NAMIS_Competition_Year)
part1_CRD <- part1[part1[,"Program_Id"]=="CRDPJ",]
length(unique(part1_CRD$check_unique))
part2$check_unique <- paste(part2$NAMIS_Appl_ID, "-", part2$NAMIS_Competition_Year)
part2_CRD <- part2[part2[,"Program_Id"]=="CRDPJ",]
length(unique(part2_CRD$check_unique))
combination <- bind_rows(part1_CRD, part2_CRD)
length(unique(combination$check_unique))
length(unique(part1_notCRD$check_unique))
part1_notCRD <- part1[part1[,"Program_Id"]!="CRDPJ",]
length(unique(part1_notCRD$check_unique))
part2_notCRD <- part2[part2[,"Program_Id"]!="CRDPJ",]
length(unique(part2_notCRD$check_unique))
combination_not <- bind_rows(part1_notCRD, notpart2_CRD)
length(unique(combination_not$check_unique))
combination_not <- bind_rows(part1_notCRD, notpart2_CRD)
part2_notCRD <- part2[part2[,"Program_Id"]!="CRDPJ",]
length(unique(part2_notCRD$check_unique))
combination_not <- bind_rows(part1_notCRD, part2_notCRD)
length(unique(combination_not$check_unique))
part1_info <- read.csv(file = "/Users/mayhe/Dropbox/NSERC Reseach Project 2019/Data/publications/part.1/pub_part1_0906/part1_info.csv", header = T, as.is = T, encoding = "UTF=8")
length(unique(part1_info$Title))
part2_info <- read.csv(file = "/Users/mayhe/Dropbox/NSERC Reseach Project 2019/Data/publications/part.2/pub_part2_0906/part2_info_update", header = T, as.is = T, encoding = "UTF=8")
part2_info <- read.csv(file = "/Users/mayhe/Dropbox/NSERC Reseach Project 2019/Data/publications/part.2/pub_part2_0906/part2_info_update.csv", header = T, as.is = T, encoding = "UTF=8")
length(unique(part2_info$Title))
View(combination)
?help
View(combination)
x <- c(1,2,3)
class(x)
is.numeric(x)
y <- c(TRUE, 22, "great")
class(y)
z <- list(TRUE, 22, "great")
class(z)
z
y = c(TRUE, 22, "great")
name <- c("Mike", "Lucy", "John")
age <- c(20, 25, 30)
student <- c(TRUE, FALSE, TRUE)
df = data.frame(name, age, student)
df
name[1]
class(df)
df
class(df$name)
class(df$age)
tree <- read.csv("trees91.csv", header=TRUE, sep=",")
rm(list = ls())
tree <- read.csv("trees91.csv", header=TRUE, sep=",")
sshh
setwd("~/Dropbox/R basic workshop")
tree <- read.csv("trees91.csv", header=TRUE, sep=",")
View(tree)
tree$LFBM
mean(tree$LFBM)
quantile(tree$LFBM)
summary(tree$LFBM)
summary(tree)
temperature <- 35
if (temperature > 30){
print("It is sooooo hot! Stay home!")
} else {
print("It is not so hot! Enjoy your pleasant time!")
}
temperature <- 0
if (temperature > 30){
print("It is sooooo hot! Stay home!")
} else {
print("It is not so hot! Enjoy your pleasant time!")
}
score <- c(98,95,20,25,30)
for (i in 1:5){
print (score[i])
}
length(score)
for (i in 1:obs){
if (score[i]>60){
print("Congraduation! You've passed the exam!")
} else {
print("Sorry, you fail to pass this exam...")
}
}
obs <- length(score)
for (i in 1:obs){
if (score[i]>60){
print("Congraduation! You've passed the exam!")
} else {
print("Sorry, you fail to pass this exam...")
}
}
readinteger <- function(){
n <- readline(prompt="Please, enter your ANSWER: ")
}
response <- as.integer(readinteger())
while (response!=42) {
print("Sorry, the answer to whatever the question MUST be 42");
response <- as.integer(readinteger());
}
setwd("~/Dropbox/R basic workshop")
df <- read.csv("data processing.csv", header = TRUE, sep = ",")
View(df)
rm(list = ls())
library("caret", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
install.packages('caret')
install.packages("caret")
library("caret", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
df <- read.csv("data processing.csv", header = TRUE, sep = ",")
View(df)
attributes(df)
nrow(df)
ncol(df)
row.names(df)[2]
row.names(df)[2] <- "999"
is.na(df$Age)
table(is.na(df$Age))
na.omit(df)
df2 <- df[complete.cases(df$Age),]
View(df2)
df2 <- df[complete.cases(df),]
df2 <- df[,complete.cases(df$Age)]
?complete.cases
summary(df)
unique(df$Country)
length(unique(df$Country))
sort(df$Age)  # numbers from smallest to largest
order(df$Age)  # rows from smallest to largest
df3 <- df[order(df$Age),]
View(df3)
row.names(df3) <-NULL
df3 <- df[order(df$Age),]
row.names(df3) <-NULL
rank(df$Age)  # ranks for each row
View(df)
View(df)
df <- df[c("Age","Purchased","Salary","Country")]
df$Age[is.na(df$Age)] = mean(df$Age, na.rm = T)
df$Country = factor(df$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
str(df$Country)
df$Country
df$Purchased = factor(df$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
View(df)
library(ggplot2)
# scatter plots
# ggplot2
ggplot(housing,
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
library(ggplot2)
housing <- read.csv("landdata-states.csv")
# scatter plots
# ggplot2
ggplot(housing,
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
hp2001Q1 <- filter(housing, Date == 2001.25)
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 +
geom_point(aes(color=Home.Value, shape = region))
ggplot(filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
hp2001Q1 <- filter(housing, Date == 2001.25)
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 +
geom_point(aes(color=Home.Value, shape = region))
library(ggplot2)
ggplot(filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
View(housing)
